name: Run livestreamScheduler-binary

on:
  schedule:
    - cron: "17 * * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: create config.yaml
        uses: "finnp/create-file-action@master"
        env:
          FILE_NAME: "config.yaml"
          FILE_BASE64: ${{ vars.CONFIGYAML }}

      - name: create credentials.json
        id: create-json-credentials
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "credentials.json"
          json: ${{ secrets.CREDENTIALSJSON }}

      - name: create token.json
        id: create-json-token
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "token.json"
          json: ${{ secrets.TOKENJSON }}

      - name: check wether the logs exist in artifacts
        uses: xSAVIKx/artifact-exists-action@v0
        id: logs
        with:
          name: 'coverage-artifact'

      - name: download logs from artifact
        if: ${{ steps.check_coverage_artifact.outputs.exists }}
        uses: actions/download-artifact@v4
        with:
          name: logs

      - name: Check latest release version
        id: latest-release
        run: |
          latest_release=$(curl --silent "https://api.github.com/repos/johannesbuehl/livestreamScheduler/releases/latest" | jq -r .tag_name)
          echo "Latest release: $latest_release"
          echo "version=$latest_release" >> $GITHUB_OUTPUT

      - name: Cache binary
        id: cache-binary
        uses: actions/cache@v4
        with:
          path: livestreamScheduler
          key: livestreamScheduler-${{ steps.latest-release.outputs.version }}
          restore-keys: |
            livestreamScheduler-

      - name: Download binary from GitHub Release
        if: steps.cache-binary.outputs.cache-hit != 'true'
        run: |
          curl -L -o livestreamScheduler https://github.com/johannesbuehl/livestreamScheduler/releases/latest/download/livestreamScheduler
          chmod +x ./livestreamScheduler

      - name: Execute binary
        run: ./livestreamScheduler

      - name: upload logs to artifact
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: ./logs
